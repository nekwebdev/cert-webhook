name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # Also trigger on version tags
    paths:
      - 'src/main.rs'
      - 'Cargo.toml'
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:  # Allows manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Check for tag on current commit
        id: check_tag
        run: |
          # Get current commit SHA
          CURRENT_SHA=$(git rev-parse HEAD)
          # Check if current commit has a tag
          TAG=$(git tag --points-at $CURRENT_SHA | grep '^v' | head -n 1 || true)
          
          if [ -n "$TAG" ]; then
            echo "has_tag=true" >> $GITHUB_OUTPUT
            echo "version=${TAG#v}" >> $GITHUB_OUTPUT
            echo "Found tag $TAG on current commit"
          else
            echo "has_tag=false" >> $GITHUB_OUTPUT
            echo "No tag found on current commit"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Version tag only for tagged commits
            type=raw,value=${{ steps.check_tag.outputs.version }},enable=${{ steps.check_tag.outputs.has_tag == 'true' }}
            # Latest tag only for tagged commits
            type=raw,value=latest,enable=${{ steps.check_tag.outputs.has_tag == 'true' }}
            # Always add short SHA for traceability
            type=sha,format=short

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true