name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'main.rs'
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'
      - 'VERSION'
  workflow_dispatch:  # Allows manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/cert-webhook

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Get version
        id: get_version
        run: |
          # Create VERSION file with 0.0.1 if it doesn't exist
          if [ ! -f VERSION ]; then
            echo "0.0.1" > VERSION
            echo "Created VERSION file with default version 0.0.1"
          fi
          
          # Read version from file
          VERSION=$(cat VERSION)
          
          # Add git SHA short hash for traceability
          SHA_SHORT=$(git rev-parse --short HEAD)
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "sha_short=${SHA_SHORT}" >> $GITHUB_OUTPUT
          echo "version_sha=${VERSION}-${SHA_SHORT}" >> $GITHUB_OUTPUT
          
          echo "Building version: ${VERSION}-${SHA_SHORT}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version_sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max 